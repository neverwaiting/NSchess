{"version":3,"sources":["file:///D:/workspace/cocos_game/work/3.6.3/demo/NSchess/assets/resources/scripts/Board.ts"],"names":["_decorator","Component","SpriteFrame","resources","log","ccclass","property","PieceType","SIDE_TYPE","Board","firstPiece_","pieceSpriteFrames_","initFenString_","pieces_","Array","getPieceTypeByChar","c","toUpperCase","PIECE_TYPE_KING","PIECE_TYPE_ADVISOR","PIECE_TYPE_BISHOP","PIECE_TYPE_KNIGHT","PIECE_TYPE_ROOK","PIECE_TYPE_CANNON","PIECE_TYPE_PAWN","PIECE_TYPE_NONE","start","initAllData","loadPieceImages","path","loadDir","err","assets","spriteFrame","name","initPieces","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAmBC,MAAAA,G,OAAAA,G;;;;;;;;;OAEhE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;iBAEzBO,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;iBAYAC,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;uBAMQC,K,WADZJ,OAAO,CAAC,OAAD,C,gBAAR,MACaI,KADb,SAC2BR,SAD3B,CACqC;AAAA;AAAA;AAAA,eACjCS,WADiC,GACN,IADM;AAAA,eAEjCC,kBAFiC;AAAA,eAIjCC,cAJiC,GAIR,+DAJQ;AAAA,eAKjCC,OALiC,GAKT,IAAIC,KAAJ,EALS;AAAA;;AAOjCC,QAAAA,kBAAkB,CAACC,CAAD,EAAuB;AACrC,kBAAOA,CAAC,CAACC,WAAF,EAAP;AACI,iBAAK,GAAL;AACI,qBAAOV,SAAS,CAACW,eAAjB;;AACJ,iBAAK,GAAL;AACI,qBAAOX,SAAS,CAACY,kBAAjB;;AACJ,iBAAK,GAAL;AACI,qBAAOZ,SAAS,CAACa,iBAAjB;;AACJ,iBAAK,GAAL;AACI,qBAAOb,SAAS,CAACc,iBAAjB;;AACJ,iBAAK,GAAL;AACI,qBAAOd,SAAS,CAACe,eAAjB;;AACJ,iBAAK,GAAL;AACI,qBAAOf,SAAS,CAACgB,iBAAjB;;AACJ,iBAAK,GAAL;AACI,qBAAOhB,SAAS,CAACiB,eAAjB;;AACJ;AACI,qBAAOjB,SAAS,CAACkB,eAAjB;AAhBR;AAkBH;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL;AACH;;AAEDC,QAAAA,eAAe,CAACC,IAAD,EAAe;AAC1B1B,UAAAA,SAAS,CAAC2B,OAAV,CAAkBD,IAAlB,EAAwB3B,WAAxB,EAAqC,UAAS6B,GAAT,EAAcC,MAAd,EAAsB;AACvD,iBAAK,IAAIC,WAAT,IAAwBD,MAAxB,EACI5B,GAAG,CAAC6B,WAAW,CAACC,IAAb,CAAH;AACP,WAHD;AAIH;;AAEDC,QAAAA,UAAU,GAAG;AACT,eAAKtB,OAAL,GAAe,IAAIC,KAAJ,CAAiB,EAAjB,CAAf;AACH;;AAEDa,QAAAA,WAAW,GAAG;AACV,eAAKC,eAAL,CAAqB,sBAArB;AACH;;AAEDQ,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAjDgC,O","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, resources, Sprite, log } from 'cc';\r\nimport { Piece } from './Piece';\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum PieceType {\r\n    PIECE_TYPE_KING = 0,\r\n    PIECE_TYPE_ADVISOR = 1,\r\n    PIECE_TYPE_BISHOP = 2,\r\n    PIECE_TYPE_KNIGHT = 3,\r\n    PIECE_TYPE_ROOK = 4,\r\n    PIECE_TYPE_CANNON = 5,\r\n    PIECE_TYPE_PAWN = 6,\r\n    PIECE_TYPE_NUM = 7,\r\n    PIECE_TYPE_NONE = 8\r\n}\r\n\r\nenum SIDE_TYPE {\r\n    SIDE_TYPE_RED = 0,\r\n    SIDE_TYPE_BLACK = 1\r\n}\r\n\r\n@ccclass('Board')\r\nexport class Board extends Component {\r\n    firstPiece_: Node | null = null\r\n    pieceSpriteFrames_: Array<SpriteFrame>\r\n\r\n    initFenString_: string = \"rnbakabnr/9/1c5c1/p1p1p1p1p/9/9/P1P1P1P1P/1C5C1/9/RNBAKABNR w\"\r\n    pieces_: Array<Piece> = new Array<Piece>\r\n\r\n    getPieceTypeByChar(c: string): PieceType {\r\n        switch(c.toUpperCase()) {\r\n            case \"K\":\r\n                return PieceType.PIECE_TYPE_KING\r\n            case \"A\":\r\n                return PieceType.PIECE_TYPE_ADVISOR\r\n            case \"B\":\r\n                return PieceType.PIECE_TYPE_BISHOP\r\n            case \"N\":\r\n                return PieceType.PIECE_TYPE_KNIGHT\r\n            case \"R\":\r\n                return PieceType.PIECE_TYPE_ROOK\r\n            case \"C\":\r\n                return PieceType.PIECE_TYPE_CANNON\r\n            case \"P\":\r\n                return PieceType.PIECE_TYPE_PAWN\r\n            default: \r\n                return PieceType.PIECE_TYPE_NONE\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.initAllData()\r\n    }\r\n\r\n    loadPieceImages(path: string) {\r\n        resources.loadDir(path, SpriteFrame, function(err, assets) {\r\n            for (let spriteFrame of assets)\r\n                log(spriteFrame.name)\r\n        })\r\n    }\r\n\r\n    initPieces() {\r\n        this.pieces_ = new Array<Piece>(64)\r\n    }\r\n\r\n    initAllData() {\r\n        this.loadPieceImages(\"images/pieces/style1\")\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}